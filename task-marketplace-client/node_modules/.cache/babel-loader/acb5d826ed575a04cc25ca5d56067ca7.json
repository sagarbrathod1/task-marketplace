{"ast":null,"code":"import _asyncToGenerator from \"/Users/sagarrathod/Desktop/Project 2/task-marketplace-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/sagarrathod/Desktop/Project 2/task-marketplace-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sagarrathod/Desktop/Project 2/task-marketplace-client/src/features/tasks/Task.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { get_task_async, selectTasks, add_task } from './taskSlice';\nimport styles from './Counter.module.css';\nexport function Task() {\n  var state = useSelector(selectTasks);\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      set_task = _useState2[1]; //const incrementValue = Number(incrementAmount) || 0;\n\n  /* useEffect(function () {\n         dispatch(get_task_async());\n  }, [tasks]);*/\n\n\n  var handle_onChange = function handle_onChange(event) {\n    set_task(event.target.value);\n  };\n\n  var handle_submission = function handle_submission() {\n    //dispatch(add_task(task));\n    set_task(\"\");\n    console.log(\"here\");\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var config, response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(state.auth.token)\n                }\n              };\n              console.log(config);\n              _context.next = 4;\n              return axios.post(\"http://localhost:4444/api/tasks\", {\n                task: task\n              }, config);\n\n            case 4:\n              response = _context.sent;\n              // The value we return becomes the `fulfilled` action payload\n              console.log(response.data, \"here\");\n              set_task(\"\");\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Please enter a task.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handle_onChange,\n    value: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handle_submission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Upload\"));\n}","map":{"version":3,"names":["React","useEffect","useState","axios","useSelector","useDispatch","get_task_async","selectTasks","add_task","styles","Task","state","dispatch","task","set_task","handle_onChange","event","target","value","handle_submission","console","log","config","headers","Authorization","auth","token","post","response","data"],"sources":["/Users/sagarrathod/Desktop/Project 2/task-marketplace-client/src/features/tasks/Task.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  get_task_async,\n  selectTasks,\n  add_task\n} from './taskSlice';\nimport styles from './Counter.module.css';\n\nexport function Task() {\n  const state = useSelector(selectTasks);\n  const dispatch = useDispatch();\n  const [task, set_task ] = useState(\"\");\n\n  //const incrementValue = Number(incrementAmount) || 0;\n\n  /* useEffect(function () {\n\n        dispatch(get_task_async());\n  }, [tasks]);*/\n\n  const handle_onChange = function (event) {\n    set_task(event.target.value);\n\n  }\n\n  const handle_submission = function () {\n        //dispatch(add_task(task));\n        set_task(\"\");\n        console.log(\"here\");\n        (async function () {\n            const config = {\n                headers: { Authorization: `Bearer ${state.auth.token}` }\n            };\n            console.log(config);\n        const response = await axios.post(\n            \"http://localhost:4444/api/tasks\",\n            {task},\n            config);\n        // The value we return becomes the `fulfilled` action payload\n            console.log(response.data, \"here\");\n            set_task(\"\");\n        }())\n\n  }\n  return (\n    <div>\n        <h1>Please enter a task.</h1>\n        <input type=\"text\" onChange={handle_onChange} value={task}/>\n        <button onClick={handle_submission}>Upload</button>\n        {/*<ul>{tasks.length >= 1 ? tasks.map((task, index)=> <li className={index % 2 === 0 ? \"bg-gray-100 text-black\" : \"\"}>{task}</li>) : \"\" }\n        </ul>*/}\n\n\n    </div>\n  );\n}\n"],"mappings":";;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,QAHF,QAIO,aAJP;AAKA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,SAASC,IAAT,GAAgB;EACrB,IAAMC,KAAK,GAAGP,WAAW,CAACG,WAAD,CAAzB;EACA,IAAMK,QAAQ,GAAGP,WAAW,EAA5B;;EAFqB,gBAGKH,QAAQ,CAAC,EAAD,CAHb;EAAA;EAAA,IAGdW,IAHc;EAAA,IAGRC,QAHQ,kBAKrB;;EAEA;AACF;AACA;;;EAGE,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAiB;IACvCF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;EAED,CAHD;;EAKA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;IAChC;IACAL,QAAQ,CAAC,EAAD,CAAR;IACAM,OAAO,CAACC,GAAR,CAAY,MAAZ;;IACC;MAAA;MAAA;QAAA;UAAA;YAAA;cACSC,MADT,GACkB;gBACXC,OAAO,EAAE;kBAAEC,aAAa,mBAAYb,KAAK,CAACc,IAAN,CAAWC,KAAvB;gBAAf;cADE,CADlB;cAIGN,OAAO,CAACC,GAAR,CAAYC,MAAZ;cAJH;cAAA,OAKsBnB,KAAK,CAACwB,IAAN,CACnB,iCADmB,EAEnB;gBAACd,IAAI,EAAJA;cAAD,CAFmB,EAGnBS,MAHmB,CALtB;;YAAA;cAKKM,QALL;cASD;cACIR,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,IAArB,EAA2B,MAA3B;cACAf,QAAQ,CAAC,EAAD,CAAR;;YAXH;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,KAAD;EAcL,CAlBD;;EAmBA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BADJ,eAEI;IAAO,IAAI,EAAC,MAAZ;IAAmB,QAAQ,EAAEC,eAA7B;IAA8C,KAAK,EAAEF,IAArD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAGI;IAAQ,OAAO,EAAEM,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAHJ,CADF;AAWD"},"metadata":{},"sourceType":"module"}